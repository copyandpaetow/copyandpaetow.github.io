---
import Layout from "../layouts/layout.astro";
import TV from "../features/tv/tv.astro";
import CassettePile from "../features/tv/cassettes/cassete-pile.astro";
import Remote from "../features/tv/remote/remote.astro";
import Room from "../features/tv/room.astro";
---

<script>
	/*

## todo: next steps


## tasks

- add dedicated options for flickering/lines or a general "screen realism"
=> this could also be a radio group with "none"/"mild"/"full"
- settings label buttons on the remote need some kind of grouping

- use aria-current to highlight the settings active selection, which should get a contrasting highlight and inverted text color
=> this makes actionable elements identifyable

- check active element states (hover, active, focus)
- check usage of vh/svh etc. We should prefer dvh
- max content with of text elements
- many elements like anchor links, images, and videos need alt tags
- links need icons (mail, external)
- the power button doesnt do anything atm, turn screen on/off again?

## bugs

- the vhs slot cover cant move realistically since the background is overlaying it. We would need to create a cutout in the background
- screen modals can scroll but the default tv screen cant
- on safari modals are focused?
- 3d effects move the remote screen differently compared to the tapes

## refactorings

- unify css values and calculations
- update custom property names
- extract similar functionality into classes
- 3d elements should all be blocks
- 3d elements need to either have an outline/border or some kind of shadow



## future features

- real inset of the displays
- real remote buttons
- shadows
- add more sounds
=> tv turning on
=> static noise and animation of the static
-improve remote
=> enable channel functionality
=> mute and other settings should have their own icon on the screen
=> inputting numbers should also wait a little before going to that number
- rotate the scene based on mouse position => this might be a little to strong, it would make more sense to do this for the background
- add scenery that changes with the content of the selected tape (background stuff, colors etc) and maybe even a parallax effect
- add height with boxes and gimmicks like a 3d sandwhich (2 buns + lettuce + patty + cheese + tomatO => https://codepen.io/qub3r-001/pen/KKveNaK)
- when firefox releases v123 with DSD, we should refactor all blocks to that

*/
</script>

<Layout title="Copy and Paetow">
	<header class="visually-hidden">
		<h1>Hey, it</h1>
		<span
			>The scene features a retro tv standing on a pile of vhs tapes. Selecting a tape will preview
			its content</span
		>
	</header>
	<main>
		<div class="camera">
			<div class="tv-scene scene z-layer-interactivity">
				<Remote className="interactive" />

				<TV className="tv-interactive" />

				<CassettePile className="interactive" />

				<Room />
			</div>
		</div>
	</main>
</Layout>

<style is:global>
	@layer defaults {
		:where(body) {
			contain: layout;
		}

		:where(body:has(#remote-modal[open]), body:has(#remote-modal:popover-open)) {
			position: fixed;
			width: 100%;
			height: 100%;

			.scene {
				--scene-padding: 0px;
				--remote-depth: 0px;
			}
		}

		main {
			display: grid;
			place-content: center;
		}
	}

	@layer components {
		.z-layer-interactivity {
			/* this are required for safari and firefox interactivity */
			transform: translateZ(calc(var(--tv-depth) * -1));

			.interactive {
				transform: translateZ(var(--tv-depth));
			}

			.tv-interactive {
				transform: translateZ(calc(var(--tv-depth) + var(--tv-offset-z)));
			}
		}

		.tv-scene {
			width: var(--scene-width);
			padding-block: var(--scene-padding);
		}

		:has(#that-3d-episode:target):not(:has(:where(:popover-open, [open]))) .camera {
			--block-render-top: block;
			--block-render-right: block;
			--perspective: 2000px;
			--camera-truck: 1200px;
			--camera-pan: -40deg;
			--camera-dolly: 1000px;
		}
	}
</style>
