---
import "../styles/styles.css";
import Back from "../features/tv/icons/back.svg?raw";
import Program from "../features/tv/menu/program.astro";
import Settings from "../features/tv/menu/settings.astro";

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="copyandpaetow" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="screen-root screen-content-layout page">
		<nav class="navigation details-layout">
			<details>
				<summary>
					<p class="visible-closed">
						settings
						<span class="no-tv">(no tv realism)</span>
						<span class="no-anim">(no animations)</span>
					</p>
					<p class="visible-open with-icon-start">
						<Fragment set:html={Back} /> exit
					</p>
				</summary>
				<ol class="content">
					<li class="details-layout">
						<details>
							<summary>
								<p class="visible-closed">program</p>
								<p class="visible-open with-icon-start"><Fragment set:html={Back} /> back</p>
							</summary>
							<Program className="content overflow-scroll" />
						</details>
					</li>
					<li class="details-layout">
						<details>
							<summary>
								<p class="visible-closed">settings</p>
								<p class="visible-open with-icon-start"><Fragment set:html={Back} /> back</p>
							</summary>
							<Settings
								animationDefault={false}
								tvRealismDefault={false}
								className="content overflow-scroll"
							/>
						</details>
					</li>
				</ol>
			</details>
		</nav>
		<slot name="header" />
		<main>
			<slot />
		</main>
		<footer>
			<slot name="footer" />
		</footer>
	</body>
</html>

<style is:global>
	@layer components {
		.page {
			--save-screen-padding: 0.5rem;
			--screen-gap: 2rem 0rem;

			@media (min-width: 22rem) {
				--save-screen-padding: 1rem;
			}
			@media (min-width: 28rem) {
				--save-screen-padding: 2rem;
			}

			& header {
				margin-top: 5rem;
			}

			& footer {
				padding-bottom: 5rem;
			}
		}

		.full-screen-menu {
			@media (min-width: 22rem) {
				--save-screen-padding: 3rem 1rem;
			}

			@media (min-width: 28rem) {
				--save-screen-padding: 5rem 2rem;
			}
		}

		:has(#settings-animation:checked) .no-anim,
		:has(#settings-tv-realism:checked) .no-tv {
			display: none;
		}

		.screen-root::after,
		.screen-root::before {
			position: fixed;
			inset: 0;
			width: 100%;
			height: 100svh;
		}

		.navigation {
			--screen-content-height: 100dvh;
			--_screen-background: var(--screen-background, hsl(207.1, 15.9%, 61.76%));
			--content-width: minmax(19rem, 40rem);
			--save-screen-padding-inline: 1fr;

			background-color: var(--_screen-background);

			&:has(> [open]) {
				height: var(--screen-content-height);
				position: absolute;
			}

			&:not(:has(> [open])) {
				height: fit-content;
				position: sticky;
				top: 0;
				grid-column: full-screen;
				padding: 1rem 2rem;
				text-align: end;
			}

			&:not(:has(> [open])) summary {
				:hover,
				:focus,
				:active {
					background: white;
				}
			}

			.visible-closed {
				text-decoration: underline;
			}
		}
	}
</style>
