.flow > * + * {
	margin-top: var(--flow-space, 1em);
}

.list {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	gap: var(--gutter);
}

.visually-hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	border: 0;
}

:where([data-appearance="none"]) {
	appearance: none;
	color: transparent;
	background-color: transparent;
	border: none;
}

.hidden-without-js {
	@media (scripting: none) {
		display: none;
	}
}

.camera {
	--_perspective: var(--perspective, 200000px);
	--_camera-truck: var(--camera-truck, 0px);
	--_camera-pedestal: var(--camera-pedestal, 0px);
	--_camera-dolly: var(--camera-dolly, 0px);

	--_camera-roll: var(--camera-roll, 0deg);
	--_camera-pan: var(--camera-pan, 0deg);
	--_camera-tilt: var(--camera-tilt, 0deg);

	transform: perspective(var(--_perspective)) translateZ(var(--_perspective))
		translateX(calc(var(--_camera-truck) * -1)) translateY(var(--_camera-pedestal))
		translateZ(calc(var(--_camera-dolly) * -1)) rotateX(var(--_camera-roll))
		rotateY(var(--_camera-pan)) rotateZ(var(--_camera-tilt))
		translateZ(calc(var(--_perspective) * -1));

	transform-style: preserve-3d;

	& :where(*) {
		transform-style: preserve-3d;
	}

	& :where(*:not(button, label, a, input)) {
		outline: 1px solid transparent;
	}
}
