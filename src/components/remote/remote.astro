---
import Back from "@icons/back.astro";
import RemoteBody from "./remote-body.astro";
import Settings from "./screen-settings.astro";
import Program from "./screen-program.astro";
import ScreenMenu from "./screen-menu.astro";

export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<script>
  import { remoteInteractivityEnhancements } from "./interactivity.ts";

  remoteInteractivityEnhancements();
</script>

<!-- TODO:if the power is out, the remote cant be selected -->
<div class=`remote ${className}`>
  <section class="remote-body three-dimensional interactive-remote" inert>
    <RemoteBody />
  </section>
  <ScreenMenu
    tag="section"
    id="settings-menu"
    className="screen-clipped-border screen-root overflow-hidden screen-animation top-level"
  >
    <p class="visually-hidden" slot="summary-open">open remote menu</p>
    <p class="with-icon-start" slot="summary-close"><Back /> exit</p>
    <ScreenMenu>
      <p slot="summary-open">program</p>
      <p class="with-icon-start" slot="summary-close"><Back /> back</p>
      <Program className=" " />
    </ScreenMenu>
    <ScreenMenu>
      <p slot="summary-open">settings</p>
      <p class="with-icon-start" slot="summary-close"><Back /> back</p>
      <Settings className=" " />
    </ScreenMenu>
  </ScreenMenu>
</div>

<style>
  .remote {
    height: var(--remote-depth);
    position: relative;
  }

  .remote-body {
    --block-background: var(--tv-background);
    --block-depth: var(--remote-depth);
    --block-border: var(--remote-border-width) solid var(--remote-border);
    --block-border-radius: var(--tv-border-radius);
  }

  .interactive-remote {
    transform-origin: top left;
    width: max-content;

    --block-render-front: grid;
    --block-render-bottom: block;
    --block-render-left: block;
    --block-render-x: "";
    --block-render-y: "";
    --block-x-direction: -1;
  }
</style>
