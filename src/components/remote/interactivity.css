:not(:has(#that-3d-episode:target)):not(:has(#settings-menu details[open]))
  .remote-button:not(.power-button) {
  --block-render-y: none;
  --block-render-x: none;
}

:has(#settings-three-dimensional:checked):has(#that-3d-episode:target)
  .interactive-remote {
  --block-y-direction: -1;
}

.interactive-remote {
  transform: translateY(-1px) translateX(25%) rotateY(115deg) rotateX(90.01deg)
    scale3d(var(--remote-scale), var(--remote-scale), 1);
}

@media (scripting: enabled) {
  .remote:has([open]) .interactive-remote {
    --remote-active-rotation: 0deg;

    position: absolute;
    left: 50%;
    transform: translateZ(300px) translateY(var(--remote-active-offset))
      translateX(-50%) rotateX(var(--remote-active-rotation));
  }

  :is(
      :has(#settings-three-dimensional:checked),
      :has(#settings-three-dimensional:checked):has(#that-3d-episode:target)
    )
    .remote:has(.remote-button:active)
    .interactive-remote {
    --remote-active-rotation: 20deg;
  }

  :has(#settings-three-dimensional:checked):has(#that-3d-episode:target)
    .remote:has([open])
    .interactive-remote {
    --remote-active-rotation: 25deg;

    --block-render-top: block;
    --block-render-right: block;
    --block-y-direction: 1;
    --block-x-direction: 1;
  }
}

.remote:has(.remote-screen > details:not([open]) > summary:focus-visible)
  .remote-body {
  &::before {
    outline: 2px solid blue;
  }
  .left {
    outline: 2px solid blue;
  }
}
