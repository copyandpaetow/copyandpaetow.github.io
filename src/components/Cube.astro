---

---

<script></script>

<div class="cube-wrapper">
	<div class="scene">
		<div class="cube">
			<div class="wall horizontal"></div>
			<div class="wall horizontal"></div>
			<div class="wall vertical"></div>
			<div class="wall vertical"></div>
			<div class="wall applicate"></div>
			<div class="wall applicate"></div>
		</div>
	</div>
	<menu class="controller">
		<button>pause</button>
		<button>play</button>
		<button>faster</button>
		<button>slower</button>
		<button>flip</button>
	</menu>
</div>

<style>
	.cube-wrapper {
		--width: clamp(150px, 25vw, 350px);

		width: calc(var(--width) * 1.5);
		aspect-ratio: 1;
		display: grid;
		grid-template-rows: 1fr max-content;
		gap: var(--gutter);
	}

	.controller {
		display: grid;
		grid-auto-flow: column;
		justify-content: center;
	}

	.scene {
		--rotation: 20deg;

		width: var(--width);
		aspect-ratio: 1;
		perspective: calc(var(--width) * 5);
		position: relative;
		margin: auto;
	}

	.scene * {
		transform-style: preserve-3d;
		position: absolute;
		inset: 0;
	}

	.cube {
		rotate: y var(--rotation);
		animation: spin 60s linear infinite; /* adds a slow spinning animation */
	}

	.wall:nth-child(odd) {
		--direction: 1;
	}

	.wall:nth-child(even) {
		--direction: -1;
		filter: invert();
	}

	.wall {
		--turn: var(--turnAxis);
		transform: var(--turn) translateZ(calc(var(--width) / 2));
	}

	.horizontal {
		background-color: var(--red);
	}

	.vertical {
		background-color: var(--green);
		--turnAxis: rotateX(var(--turnVal));
	}

	:is(.horizontal, .vertical) {
		--turnVal: calc(90deg * var(--direction));
	}

	:is(.horizontal, .applicate) {
		--turnAxis: rotateY(var(--turnVal));
	}

	.applicate {
		background-color: var(--blue);
		--turnVal: calc(90deg - 90deg * var(--direction));
	}

	@keyframes spin {
		100% {
			rotate: y calc(360deg + var(--rotation));
		}
	}
</style>
