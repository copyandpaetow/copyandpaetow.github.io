---
import Room from "./room.astro";
---

<main class="camera centered">
  <div class="tv-scene scene small-screen z-layer-interactivity">
    <slot />
    <Room />
  </div>
</main>

<style is:global>
  :where(main) {
    contain: layout;
  }

  .camera {
    --_perspective: var(--perspective, 200000px);
    --_camera-truck: var(--camera-truck, 0px);
    --_camera-pedestal: var(--camera-pedestal, 0px);
    --_camera-dolly: var(--camera-dolly, 0px);

    --_camera-roll: var(--camera-roll, 0deg);
    --_camera-pan: var(--camera-pan, 0deg);
    --_camera-tilt: var(--camera-tilt, 0deg);

    transform: perspective(var(--_perspective)) translateZ(var(--_perspective))
      translateX(calc(var(--_camera-truck) * -1))
      translateY(var(--_camera-pedestal))
      translateZ(calc(var(--_camera-dolly) * -1)) rotateX(var(--_camera-roll))
      rotateY(var(--_camera-pan)) rotateZ(var(--_camera-tilt))
      translateZ(calc(var(--_perspective) * -1));

    transform-style: preserve-3d;
    display: block;

    & :where(*) {
      transform-style: preserve-3d;
    }

    & :where(*:not(button, label, a, input, summary)) {
      outline: 1px solid transparent;
    }
  }

  :has(#settings-three-dimensional:checked):has(#that-3d-episode:target) {
    .camera {
      --block-render-top: block;
      --block-render-right: block;
      --block-render-y: "";
      --block-render-x: "";
      --perspective: 2000px;
      --camera-truck: 1200px;
      --camera-pan: -40deg;
      --camera-dolly: 1000px;
      --camera-pedestal: 1130px;
      --camera-roll: -34deg;
    }

    .interactive-remote {
      --block-y-direction: -1;
    }
  }
</style>
