---
import Block from "../3d/block.astro";

export interface Props {
	decoType?: "a" | "b" | "c";
	tapeType?: "blank" | "stripes" | "checked";
	id?: string;
}

import Eject from "../icons/eject.svg?raw";
import CassetteTape from "./cassette-tape.astro";

const { id, ...tapeProps } = Astro.props;

const randomNumber = (min: number, max: number) => {
	return Math.floor(Math.random() * (max - min + 1) + min);
};

const randomXOffset = randomNumber(-3, 3);
const randomZOffset = randomNumber(10, 100);
---

<script>
	import "./eject-cassette";
</script>

<article
	class="cassette tv-layout"
	{...id && { id }}
	style=`
--cassette-offset-x: ${randomXOffset}%;
--cassette-offset-z: ${randomZOffset}px;`
>
	<Block className="cassette-body vhs-slot">
		<CassetteTape slot="front" {...tapeProps}>
			<slot />
		</CassetteTape>
	</Block>
	<div class="eject-cassette eject-button hidden-when-inactive">
		<eject-cassette>
			<button>
				<Fragment set:html={Eject} />
			</button>
		</eject-cassette>
	</div>

	<div class="screen-content hidden-when-inactive">
		<slot name="screen" />
	</div>
</article>

<style is:global>
	@layer components {
		.cassette {
			transform: translateX(calc(var(--cassette-offset-x))) translateZ(var(--cassette-offset-z));
			font-size: var(--font--1);
		}

		.cassette-body {
			--cassette-background: hsla(0, 0%, 10%, 1);

			--block-border: var(--border-width) solid var(--black);
			--block-background: var(--cassette-background);
			--block-depth: calc(var(--cassette-depth));
			--block-width: calc(var(--vhs-slot-width) - 4 * var(--vhs-slot-padding));
			--block-aspect-ratio: var(--cassette-aspect-ratio);
		}

		.eject-cassette {
			display: grid;
			grid-template-rows: 10% 1fr;
			grid-template-areas:
				"tv-light"
				"eject-button";
			row-gap: 5px;
		}

		.eject-cassette::before {
			content: "";
			grid-area: tv-light;
			background-color: var(--tv-light);
		}

		.eject-cassette button {
			appearance: none;
			display: grid;
			background: inherit;
			border-color: transparent;
			outline: 1px solid grey;
			outline-offset: -1px;
			height: 100%;

			&::after {
				content: "";
				position: absolute;

				left: 50%;
				height: 100%;
				width: 45px;
				transform: translateX(-50%);
			}
		}

		.eject-cassette svg {
			width: 100%;
			place-self: center;
		}
	}
</style>
