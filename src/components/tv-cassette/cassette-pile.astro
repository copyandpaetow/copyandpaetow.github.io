---
export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<div class="cassettes">
	<slot />
</div>

<style is:global>
	@layer components {
		.cassettes {
			display: grid;
			grid-auto-flow: row;
			grid-auto-rows: max-content;
			row-gap: 2px;

			.cassette {
				width: calc(var(--vhs-slot-width) - 4 * var(--vhs-slot-padding));
				aspect-ratio: 6;
			}

			&:not(:has(:target)) > article:first-of-type,
			& :target {
				transform: none;
				margin-top: calc(var(--tv-height) * -1);
				height: var(--tv-height);
				width: var(--tv-width);

				display: grid;
				grid-template-columns:
					var(--tv-border-width) [vhs-slot-start] var(--screen-padding) [screen-start] 1fr [vhs-slot-end eject-button-start]
					calc(var(--vhs-eject-button-width) - var(--screen-padding))
					[screen-end] var(--screen-padding) [eject-button-end]
					var(--tv-border-width);
				grid-template-rows:
					var(--tv-border-width) var(--screen-padding) [screen-start] calc(
						var(--screen-height) - 2 * var(--screen-padding)
					)
					[screen-end] var(--screen-padding)
					var(--module-gap)
					[vhs-slot-start]
					var(--vhs-slot-height)
					[vhs-slot-end]
					var(--module-padding)
					var(--tv-border-width);
			}

			&:not(:has(:target)) :first-child .cassette,
			& :target .cassette {
				grid-area: vhs-slot;

				transform: translateZ(calc(var(--cassettes-offset-z) + var(--cassette-active-offset-z)))
					translateY(calc(var(--vhs-slot-padding) * 1.5));
			}

			& > article:nth-of-type(2) {
				transform: none;
			}

			.screen {
				transform: translateZ(var(--cassettes-offset-z));
				display: none;
				grid-area: screen / screen;
			}

			.eject-cassette {
				display: none;
				transform: translateZ(var(--cassettes-offset-z));
				grid-area: vhs-slot / eject-button;
			}

			&:not(:has(:target)) :first-child .screen,
			& :target .screen {
				display: grid;
			}

			&:not(:has(:target)) :first-child .eject-cassette,
			& :target .eject-cassette {
				display: grid;
			}

			& > :target {
				scroll-margin-block-start: calc(var(--tv-width) + var(--above-scene));
				order: -1;
			}
		}
	}
</style>
