---
export interface Props {
	className?: string;
	id?: string;
}

const { id, className = "" } = Astro.props;
---

<div {...id && { id: id }} class=`block ${className}`>
	<div>
		<slot name="front" />
	</div>
	<div>
		<slot name="top" />
	</div>
	<div>
		<slot name="right" />
	</div>
	<div>
		<slot name="back" />
	</div>
	<div>
		<slot name="bottom" />
	</div>
	<div>
		<slot name="left" />
	</div>
</div>

<style is:global>
	@layer utilities {
		.block {
			--_block-backface-rotate: 0deg;
			--_block-aspect-ratio: var(--block-aspect-ratio);

			--_block-height: var(--block-height);
			--_block-width: var(--block-width);
			--_block-depth: var(--block-depth, var(--block-width));

			--_block-render-front: var(--block-render-front, block);
			--_block-render-top: var(--block-render-top, block);
			--_block-render-right: var(--block-render-right, block);
			--_block-render-back: var(--block-render-back, none);
			--_block-render-bottom: var(--block-render-bottom, none);
			--_block-render-left: var(--block-render-left, none);

			position: relative;
			width: var(--_block-width);
			height: var(--_block-height);
			aspect-ratio: var(--_block-aspect-ratio);

			& > div {
				--_block-opposite: 1;

				position: absolute;
				inset: 0;
				border: var(--block-border);
				background: var(--block-background);
				display: none;
				height: 100%;
			}

			& > div:nth-child(n + 4) {
				--_block-opposite: -1;
				--_block-backface-rotate: 180deg;
			}

			& > div:nth-child(3n + 1) {
				transform: rotateY(90.01deg)
					translateX(
						calc(var(--_block-depth) / 2 - var(--_block-depth) / 2 * var(--_block-opposite))
					)
					rotateY(-90.01deg) rotateY(var(--_block-backface-rotate));
			}

			& > div:nth-child(3n + 2) {
				height: var(--_block-depth);
				top: calc(50% - 50% * var(--_block-opposite));
				transform: translateY(-50%) rotateX(90.01deg) translateY(-50%)
					rotateY(var(--_block-backface-rotate));
			}

			& > div:nth-child(3n + 3) {
				width: var(--_block-depth);
				left: calc(50% + 50% * var(--_block-opposite));
				transform: translateX(-50%) rotateY(90.01deg) translateX(50%)
					rotateY(var(--_block-backface-rotate));
			}

			& > div:nth-child(1) {
				position: relative;
				display: var(--_block-render-front);
			}
			& > div:nth-child(2) {
				display: var(--_block-render-top);
			}
			& > div:nth-child(3) {
				display: var(--_block-render-right);
			}
			& > div:nth-child(4) {
				display: var(--_block-render-back);
			}
			& > div:nth-child(5) {
				display: var(--_block-render-bottom);
			}
			& > div:nth-child(6) {
				display: var(--_block-render-left);
			}
		}
	}
</style>
