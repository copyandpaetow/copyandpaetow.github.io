---
import RemoteBody from "./remote-body.astro";
export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<script>
	import "./popover-firefox";
</script>

<div class={`remote ${className}`}>
	<!--@ts-expect-error attribute is too new -->
	<button popovertarget="remote-modal" popovertargetaction="show">
		show tv remote for navigation and settings</button
	>
	<popover-firefox>
		<dialog id="remote-modal" popover class="remote-modal scene">
			<!--@ts-expect-error attribute is too new -->
			<button popovertarget="remote-modal" popovertargetaction="hide">close</button>
			<RemoteBody className="remote-position">
				<slot />
			</RemoteBody>
		</dialog>
	</popover-firefox>
</div>

<style is:global>
	@layer components {
		.scene {
			--remote-depth: 50px;
			--remote-height: clamp(300px, 75svh, 500px);
		}

		.remote {
			position: relative;
			height: var(--remote-depth);
			display: grid;

			& > * {
				grid-area: 1/1;
			}

			& > popover-firefox {
				transform-style: unset;
			}

			& > button {
				position: absolute;
				bottom: 0;
				height: calc(var(--remote-depth) * 1.5);
				width: 100%;
				appearance: none;
				color: transparent;
				background-color: transparent;
				border: none;
				transform: translateZ(var(--remote-depth));
			}
		}

		.remote-position {
			position: absolute;
			transform-origin: left top;
			transform: rotateY(115deg) rotateX(90deg) scale3d(0.5, 0.5, 0.5)
				translateZ(calc(var(--remote-depth) * -1 + var(--tv-padding))) translateX(-50%)
				translateY(25%);

			--block-render-bottom: block;
		}

		.remote-modal {
			display: grid;
			height: 100%;
			overflow: initial;
			color: transparent;
			background: transparent;
			border-color: transparent;

			&::backdrop {
				background: hsla(0, 0%, 0%, 0.5);
			}

			&:where(:popover-open, [open]) {
				height: var(--remote-depth);
				width: var(--tv-width);
				top: var(--scene-padding);
				left: 50%;
				transform: translateX(-50%);
				overflow: visible;
				position: fixed;
			}

			&:where(:popover-open, [open]) .remote-position {
				transform: translateZ(1000px) translateX(calc(var(--tv-width) / 4));

				@media (prefers-reduced-motion: no-preference) {
					transition: transform 1s ease;
				}
			}

			&:where(:popover-open, [open]) > button {
				position: absolute;
				left: 75%;
			}

			&:not(:where(:popover-open, [open])) {
				perspective: none;
				perspective-origin: initial;
				contain: none;
			}

			&:not(:where(:popover-open, [open])) > button {
				display: none;
			}

			&:not(:where(:popover-open, [open])) nav > *:not(.power-button) {
				display: none;
			}
		}
	}
</style>
