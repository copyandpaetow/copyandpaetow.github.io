---
import Scene from "../scene.astro";
import TV from "./tv.astro";
import Remote from "../tv-remote/tv-remote.astro";
import Room from "./room.astro";
import CassettePile from "../tv-cassette/cassette-pile.astro";
export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<script>
	// const controller = new AbortController();
	// const { signal } = controller;
	// const root = document.querySelector(".tv-scene") as HTMLElement;
	// let wait = false;

	// try {
	// 	root.addEventListener(
	// 		"mousemove",
	// 		(event) => {
	// 			if (wait) {
	// 				return;
	// 			}

	// 			const { clientX, clientY, currentTarget } = event;
	// 			const { clientWidth, clientHeight } = currentTarget;

	// 			const vertical = (clientX / clientWidth - 0.5) * -10;
	// 			const horizontal = (clientY / clientHeight - 0.5) * 10;

	// 			requestAnimationFrame(() => {
	// 				root.style.cssText = `--scene-rotate-x: ${horizontal}deg; --scene-rotate-y: ${vertical}deg`;
	// 				wait = false;
	// 			});
	// 			wait = true;
	// 		},
	// 		{ signal, passive: true }
	// 	);
	// } catch {
	// 	controller.abort();
	// }
</script>

<Scene className="adjust-scene">
	<div class="tv-scene">
		<span class="visually-hidden"
			>the scene shows a retro tv standing on a pile of vhs tapes. Selecting a tape will preview the
			content</span
		>

		<Remote className="interactive">
			<slot name="remote" />
		</Remote>

		<TV className="interactive" />

		<CassettePile>
			<slot />
		</CassettePile>

		<Room />
	</div>
</Scene>

<style is:global>
	@layer components {
		.adjust-scene {
			--perspective: 2000px;
			--camera-truck: 200px;
			--camera-pedestal: 0;
			--camera-dolly: 0;

			--camera-roll: 0deg;
			--camera-pan: 0deg;
			--camera-tilt: 0deg;

			transition: transform 2s ease;
		}

		.tv-scene {
			--tv-offset: 10svh;
			--tv-width: clamp(300px, calc(100vw - 2 * 1rem), 500px);
			--tv-depth: 300px;
			--tv-background: hsl(255, 2%, 67%);
			--tv-border-width: 2px;
			--tv-border-color: hsl(255, 2%, 67%);
			--tv-border: var(--tv-border-width) solid var(--tv-border-color);
			--tv-realism-effect: inset 0px 0px 1px 1px hsla(0, 0%, 0%, 0.5),
				inset 0px 0px 5px 1px hsla(0, 0%, 100%, 0.5);
			--tv-height: calc(
				var(--screen-height) + var(--vhs-slot-height) + 2 * var(--tv-border-width) + 1 *
					var(--module-padding) + var(--module-gap)
			);
			--tv-outline-color: var(--blue);
			--tv-outline-width: 2px;
			--tv-outline: var(--tv-outline-width) solid var(--tv-outline-color);

			--cassette-depth: 220px;
			--cassette-aspect-ratio: 4;
			--cassette-active-offset-z: calc(var(--cassette-depth) / 4);
			--cassettes-offset-z: calc((var(--tv-depth) - var(--cassette-depth)) / 2);

			--module-padding: 0.75rem;
			--module-border-radius: 0.25rem;
			--module-gap: 10px;
			--module-realism-effect: 0px 0px 1px 1px hsla(0, 0%, 0%, 0.33),
				inset 0px 0px 5px 1px hsla(0, 0%, 100%, 0.5);

			--screen-background: black;
			--screen-border-radius: 1rem;
			--screen-padding: 0.5rem;
			--screen-border-color: var(--grey-85);
			--screen-border-color-offset: var(--grey-90);
			--screen-module-ratio: 1.2;
			--screen-height: calc(
				((var(--tv-width) - 2 * var(--tv-border-width)) / var(--screen-module-ratio))
			);

			--vhs-slot-padding: 0.25rem;
			--vhs-slot-ratio: calc(var(--cassette-aspect-ratio) - 0.25);
			--vhs-slot-width: calc(
				var(--tv-width) - var(--vhs-eject-button-width) - 2 * var(--tv-border-width)
			);
			--vhs-slot-height: calc(
				var(--vhs-slot-width) / var(--vhs-slot-ratio) + 2 * var(--vhs-slot-padding)
			);
			--vhs-eject-button-width: 45px;

			--speaker-grill-color: var(--grey-85);

			--remote-depth: 50px;
			--remote-height: clamp(300px, 60svh, 500px);

			width: var(--tv-width);
			padding-block: var(--tv-offset);

			@media (min-width: 22rem) {
				--cassette-aspect-ratio: 5;
				--screen-padding: 1rem;
				--screen-border-radius: 1.5rem;
				--tv-border-width: 4px;
			}

			@media (min-width: 28rem) {
				--module-padding: 1rem;
				--screen-padding: 1.25rem;
				--screen-border-radius: 2rem;
				--cassette-aspect-ratio: 6;
				--tv-border-width: 16px;
			}
		}

		/* 
		@keyframes zoomin {
			0%,
			50% {
				transform: scale3d(0.5, 0.5, 0.5) translateZ(calc(var(--tv-depth) * -1)) translateZ(-1000px)
					rotateY(-45deg);
			}
			to {
				transform: translateZ(calc(var(--tv-depth) * -1));
			}
		} */

		.tv-scene {
			/* this are required for safari and firefox interactivity */
			transform: translateZ(calc(var(--tv-depth) * -1)) rotateX(var(--scene-rotate-x, 0))
				rotateY(var(--scene-rotate-y, 0));

			.cassettes {
				transform: translateZ(calc(var(--tv-depth) - var(--cassettes-offset-z)));
			}

			.interactive {
				transform: translateZ(calc(var(--tv-depth)));
			}

			/* @media (prefers-reduced-motion: no-preference) {
				animation: zoomin 5s ease;
			} */
		}
	}
</style>
