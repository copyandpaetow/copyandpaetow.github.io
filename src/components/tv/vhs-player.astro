---
export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<div class=`vhs-player ${className}`>
	<aside class="vhs-slot"></aside>
</div>

<style is:global>
	@layer defaults {
		.scene {
			--vhs-slot-padding: 0.25rem;
			--vhs-slot-ratio: calc(var(--cassette-aspect-ratio) - 0.25);
			--vhs-slot-width: calc(
				var(--tv-width) - var(--vhs-eject-button-width) - 2 * var(--tv-border-width)
			);
			--vhs-slot-height: calc(
				var(--vhs-slot-width) / var(--vhs-slot-ratio) + 2 * var(--vhs-slot-padding)
			);
			--vhs-eject-button-width: 30px;
			--vhs-gap: 8px;
		}
	}

	@layer components {
		.vhs-player {
			display: grid;
			grid-template-columns:
				[vhs-slot-start] 1fr [vhs-slot-end eject-button-start] var(--vhs-eject-button-width)
				[eject-button-end];
			height: calc(var(--vhs-slot-height));

			.vhs-slot {
				grid-area: 1 / vhs-slot;
				border-inline: 20px solid grey;
				border-block: 30px solid darkgrey;
			}

			&::before {
				content: "";
				grid-area: 1 / vhs-slot;
				margin: 9px 6px;
				box-shadow:
					inset 0 0 0 100px black,
					0 0 2px 3px black;
				z-index: 2;
			}

			&::after {
				content: "Copy and Paetow VHS Player deluxe";
				background: var(--tv-background);
				position: absolute;
				inset: calc(var(--vhs-slot-padding) * 2);
				transform: rotateX(-90.01deg);
				transform-origin: top;
				transition: transform 400ms ease 400ms;
				display: grid;
				place-content: center;
				font-weight: bold;
			}
		}
	}
</style>
