---
export interface Props {
	className?: string;
	animationDefault?: boolean;
	tvRealismDefault?: boolean;
}

const { className = "", animationDefault = true, tvRealismDefault = true } = Astro.props;
---

<ol class=`content-settings ${className}`>
	<li>
		<label for="settings-animation">Animations</label>
		<hr />
		<input
			type="checkbox"
			name="settings-animation"
			id="settings-animation"
			checked={animationDefault}
		/>
	</li>
	<li>
		<label for="settings-sound">Sound</label>
		<hr />
		<input type="checkbox" name="settings-sound" id="settings-sound" />
	</li>
	<li>
		<label for="settings-three-dimensional">3D effects</label>
		<hr />
		<input type="checkbox" name="settings-three-dimensional" id="settings-three-dimensional" />
	</li>
	<li>
		<label for="settings-tv-realism">TV realism</label>
		<hr />
		<input
			type="checkbox"
			name="settings-tv-realism"
			id="settings-tv-realism"
			checked={tvRealismDefault}
		/>
	</li>
</ol>

<style is:global>
	@layer components {
		.content-settings {
			& input {
				appearance: none;
				background-color: var(--block-background);
				position: absolute;
				width: 0;
				height: 0;
				z-index: -1;
			}

			& li {
				display: grid;
				grid-template-columns: max-content max-content 1fr max-content;
				grid-template-areas: "number title line state";
				gap: var(--_screen-content-gap);
				align-items: center;
				width: 100%;
			}

			& hr {
				border-bottom: 4px dotted currentColor;
				transform: translateY(2px);
				align-self: center;
			}

			& li::after {
				content: "off";
			}

			& li:has(input:checked)::after {
				content: "on";
			}
		}
	}
</style>
