---
import AboutPreview from "../content/about-preview.astro";
import BewegungPreview from "../content/bewegung-preview.astro";
import CssDatabasePreview from "../content/css-database-preview.astro";
import FixPrinterPreview from "../content/fix-printer-preview.astro";
import IndexPreview from "../content/index-preview.astro";
import NowPreview from "../content/now-preview.astro";
import ThirdDimensionPreview from "../content/third-dimension-preview.astro";
import DinkelbergPreview from "../content/dinkelberg-preview.astro";
import Cassette from "./cassette.astro";
import Back from "../icons/back.svg?raw";

export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<script>
	import "./eject-cassette";
</script>

<eject-cassette class=`cassette-pile ${className}  small-screen`>
	<Cassette decoType="c" id="intro">
		<a href="#intro" aria-label="jumps to the tv and previews the intro"
			>the intro nobody asked for</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<IndexPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</IndexPreview>
		</section>
	</Cassette>

	<Cassette decoType="c" tapeType="stripes" id="now" color="var(--cyan)">
		<a href="#now" aria-label="jumps to the tv and previews what I am working on at the moment"
			>now</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<NowPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</NowPreview>
		</section>
	</Cassette>

	<Cassette decoType="a" tapeType="stripes" id="bewegung">
		<a href="#bewegung" aria-label="jumps to the tv and previews a github project"
			>how to make an animation library</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<BewegungPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</BewegungPreview>
		</section>
	</Cassette>

	<Cassette decoType="b" tapeType="checked" id="that-3d-episode" color="var(--orange)">
		<a href="#that-3d-episode" aria-label="jumps to the tv and shows the whole scene in 3D"
			>That 3D episode</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<ThirdDimensionPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</ThirdDimensionPreview>
		</section>
	</Cassette>

	<Cassette decoType="b" tapeType="checked" id="dinkelberg" color="var(--magenta)">
		<a href="#dinkelberg" aria-label="jumps to the tv and previews a meme">DINKELBERG</a>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<DinkelbergPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</DinkelbergPreview>
		</section>
	</Cassette>

	<Cassette decoType="b" tapeType="checked" id="printer" color="var(--blue)">
		<a href="#printer" aria-label="jumps to the tv and previews a meme video"
			>How to fix your printer</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<FixPrinterPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</FixPrinterPreview>
		</section>
	</Cassette>

	<Cassette decoType="c" tapeType="stripes" id="about">
		<a href="#about" aria-label="jumps to the tv and previews content about myself">about</a>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<AboutPreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</AboutPreview>
		</section>
	</Cassette>

	<Cassette decoType="b" tapeType="checked" id="css-database" color="var(--blue)">
		<a href="#css-database" aria-label="jumps to the tv and previews a meme video"
			>Connect your database with CSS</a
		>
		<section
			class="screen-content screen-clipped-border screen-root cassette-content hidden-when-inactive no-overflow"
			slot="screen"
		>
			<CssDatabasePreview>
				<button class="screen-back-button with-icon-start hidden-without-js">
					<Fragment set:html={Back} /> back
				</button>
			</CssDatabasePreview>
		</section>
	</Cassette>
</eject-cassette>

<style is:global>
	@layer components {
		.cassette-pile {
			--dialog-height: var(--inner-screen-height);
			--dialog-width: var(--inner-screen-width);

			display: grid;
			grid-auto-flow: row;
			grid-auto-rows: max-content;
			row-gap: var(--cassette-gap);

			&:not(:has(:target)) .tv-layout:nth-of-type(n + 2),
			&:has(:target) .tv-layout:not(:target) {
				grid-template-columns: 1fr max-content 1fr;
				grid-template-rows: max-content;
				grid-template-areas: ". vhs-slot .";
				height: 100%;
			}

			&:not(:has(:target)) > .cassette:first-of-type,
			& :target {
				margin-top: calc(var(--tv-height) * -1);
				transform: translateZ(calc(var(--tv-offset-z) - var(--screen-offset-z)));

				.cassette-body {
					transform: translateZ(calc(var(--cassette-active-offset-z) + var(--screen-offset-z)))
						translateY(calc(var(--vhs-slot-padding) * 1.5))
						translateX(calc(var(--vhs-slot-padding) * 2));
				}
				.hidden-when-inactive {
					display: grid;
				}

				.cassette-content {
					animation: on 500ms ease;
					transform: translateZ(calc(var(--screen-offset-z) / 2));
				}

				:has(#tv-power-button:not(:checked)) & .cassette-content {
					scale: 0 0;
					animation: on 500ms ease reverse;
				}
			}

			.hidden-when-inactive {
				display: none;
			}

			& > :target {
				scroll-behavior: smooth;
				scroll-margin-block-start: var(--tv-height);
				order: -1;
			}

			&:not(:has(:target)) > .cassette:nth-of-type(2) .cassette-body,
			&:has(.tv-layout:first-of-type:target) > .cassette:nth-of-type(2) .cassette-body {
				transform: translateZ(var(--cassette-offset-z));
			}

			&:has(.tv-layout:not(:first-of-type):target) > .cassette:nth-of-type(1) .cassette-body {
				transform: translateZ(var(--cassette-offset-z));
			}

			& .cassette:not(:target) .screen-back-button:first-of-type {
				visibility: hidden;
				pointer-events: none;
			}
		}

		@media (prefers-reduced-motion: no-preference) {
			:has(:target) {
				scroll-behavior: smooth;
			}
		}
	}
</style>
