---
export interface Props {
	className?: string;
}

const { className = "" } = Astro.props;
---

<script>
	import "./eject-cassette";
</script>

<eject-cassette class=`cassette-pile ${className}`>
	<slot />
</eject-cassette>

<style is:global>
	@layer components {
		.cassette-pile {
			display: grid;
			grid-auto-flow: row;
			grid-auto-rows: max-content;
			row-gap: var(--cassette-gap);

			&:not(:has(:target)) .tv-layout:nth-of-type(n + 2),
			&:has(:target) .tv-layout:not(:target) {
				grid-template-columns: 1fr max-content 1fr;
				grid-template-rows: max-content;
				grid-template-areas: ". vhs-slot .";
				height: 100%;
			}

			&:not(:has(:target)) > .cassette:first-of-type,
			& :target {
				margin-top: calc(var(--tv-height) * -1);
				transform: translateZ(var(--tv-offset-z));

				.cassette-body {
					transform: translateZ(var(--cassette-active-offset-z))
						translateY(calc(var(--vhs-slot-padding) * 1.5))
						translateX(calc(var(--vhs-slot-padding) * 2));
				}
				.hidden-when-inactive {
					display: grid;
				}

				.cassette-content {
					animation: on 500ms ease;
				}
			}

			.hidden-when-inactive {
				display: none;
			}

			& > :target {
				scroll-behavior: smooth;
				scroll-margin-block-start: var(--tv-height);
				order: -1;
			}

			&:not(:has(:target)) > .cassette:nth-of-type(2) .cassette-body,
			&:has(.tv-layout:first-of-type:target) > .cassette:nth-of-type(2) .cassette-body {
				transform: translateZ(var(--cassette-offset-z));
			}

			&:has(.tv-layout:not(:first-of-type):target) > .cassette:nth-of-type(1) .cassette-body {
				transform: translateZ(var(--cassette-offset-z));
			}
		}

		@media (prefers-reduced-motion: no-preference) {
			:has(:target) {
				scroll-behavior: smooth;
			}
		}
	}
</style>
