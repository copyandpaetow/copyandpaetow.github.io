---
export interface Props {
	decoType?: "a" | "b" | "c";
	tapeType?: "blank" | "stripes" | "checked";
	color?: string;
}

const { decoType = "a", tapeType = "blank", color } = Astro.props;
---

<div class="cassette-front">
	<div
		class="tape"
		data-deco-type={decoType}
		data-tape-type={tapeType}
		{...color && { style: `--tape-color: ${color};` }}
	>
		<slot />
	</div>
</div>

<style is:global>
	@font-face {
		font-family: "Permanent Marker";
		src: url("/fonts/permanentmarker.woff2") format("woff2");
		font-weight: normal;
		font-style: normal;
	}

	@layer components {
		.cassette-front {
			height: 100%;

			--padding-inline: 0.5rem;
			--padding-block: 0.25rem;

			display: grid;
			grid-template-columns: [full-start reader-start] 10% [reader-end tape-start] 1fr [tape-end spacing-start] 2.5% [spacing-end full-end];
			grid-template-rows: 1fr;
			padding: var(--padding-block) var(--padding-inline);

			.tape {
				grid-area: 1 / tape;
			}

			&::before,
			&::after {
				content: "";
				grid-area: 1 / reader;
				width: 50%;
				height: 60%;
				transform: translateX(50%);
				background-color: hsla(0, 0%, 0%, 1);
				align-self: end;
			}
			&::after {
				width: 40%;
				height: 35%;
				transform: translateX(calc(75%)) translateY(0%);
				background-color: var(--cassette-background);
			}
		}

		.tape {
			height: 100%;
			background-color: var(--grey-30);
			border-radius: 0.25rem;
			display: grid;
			grid-template-columns: max-content 1fr max-content;
			position: relative;
			overflow: hidden;

			color: var(--tape-color, var(--black));

			& a {
				font-family: "Permanent Marker", "Segoe Print", "Bradley Hand", Chilanka, TSCu_Comic, casual,
					cursive;
				text-transform: uppercase;
				font-size: var(--font--1);

				@media (min-width: 28rem) {
					font-size: 1.2rem;
				}
			}

			& a:visited {
				color: currentColor;
			}

			&:has(:focus-visible) {
				outline: var(--tv-outline);
			}

			&[data-tape-type="stripes"] {
				--stripe-color: var(--grey-40);

				background: repeating-linear-gradient(
					to bottom,
					white,
					white 33%,
					var(--stripe-color) calc(33% + 1px)
				);
			}

			&[data-tape-type="checked"] {
				--stripe-color: var(--grey-40);

				background: repeating-linear-gradient(
						to bottom,
						transparent,
						transparent 33%,
						var(--stripe-color) calc(33% + 1px)
					),
					repeating-linear-gradient(to right, white, white 5%, var(--stripe-color) calc(5% + 1px));
			}

			& > * {
				width: 100%;
				height: max-content;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				display: -webkit-box;
				grid-column: 2/3;
				place-self: center;
				text-align: center;
			}

			&::before {
				grid-column: 1/2;
			}
			&::after {
				grid-column: 4/5;
			}
		}

		.tape[data-deco-type="a"] {
			&::before {
				content: "";
			}

			&::after {
				color: var(--black);
				white-space: pre;
				display: grid;
				aspect-ratio: 1;
				height: 100%;
				place-content: center;
				text-align: center;
				content: "Video \A Cassette";
				font-size: 1px;
				line-height: 1;
				transform: rotateZ(-90deg);
				background: linear-gradient(
					to bottom,
					var(--yellow) 0%,
					var(--yellow) 25%,
					var(--orange) 25%,
					var(--orange) 50%,
					var(--red) 50%,
					var(--red) 100%
				);
			}
		}

		.tape[data-deco-type="b"] {
			&::after,
			&::before {
				content: "";
				height: var(--front-height);
				width: var(--space-1);
				background-color: var(--blue);
				color: var(--black);
			}

			&::before {
				content: "120";
				display: grid;
				place-content: center;
				line-height: 1;
				font-size: 1px;
			}

			&::after {
				width: var(--space--2);
				left: calc(100% - var(--space--2));
			}
		}

		.tape[data-deco-type="c"] {
			&::before {
				white-space: pre;
				display: grid;
				height: 100%;
				aspect-ratio: 1;
				font-size: 1px;
				place-content: start center;
				text-align: center;
				content: "Video \A Cassette";
				color: var(--black);
				transform: rotateZ(-90deg);
				background: linear-gradient(
					to bottom,
					var(--red) 0%,
					var(--red) 40%,
					var(--magenta) 40%,
					var(--magenta) 80%,
					transparent 80%
				);
			}

			&::after {
				content: "";
				height: var(--front-height);
				width: var(--space--1);
				left: calc(100% - var(--space--1));
				background-color: var(--magenta);
			}
		}
	}
</style>
